from RsSmw import *
import time
import numpy as np

RsSmw.assert_minimum_version('5.0.44')
# smw = RsSmw('TCPIP::10.176.177.181::HISLIP')
smw = RsSmw('TCPIP::10.176.177.181::5025::SOCKET', options='SelectVisa=SocketIo') # No VISA needed
print(f'Driver Info: {smw.utilities.driver_version}')
print(f'Instrument: {smw.utilities.idn_string}')

# Instrument options are properly parsed duplicates are removed, and the items are sorted (k-options first)
print(f'Instrument options: {",".join(smw.utilities.instrument_options)}')

# Driver's instrument status checking ( SYST:ERR? ) after each command (default value is True):
smw.utilities.instrument_status_checking = True

# The smw object uses the global HW instance one - RF out A
smw.repcap_hwInstance_set(repcap.HwInstance.InstA)

# Clone the smw object to the smw_rf2 and select the RF out B
# smw_rf2 = smw.clone()
# smw_rf2.repcap_hwInstance_set(repcap.HwInstance.InstB)

# Now we have two independent objects for two RF Outputs - smw and smw_rf2
# They share some common features of the instrument, like for example resetting
# smw_rf2.utilities.reset()

smw.output.state.set_value(True)
smw.source.frequency.set_mode(enums.FreqMode.CW)
smw.source.power.level.immediate.set_amplitude(0)
f_fix = 3688.25E6
smw.source.frequency.fixed.set_value(f_fix)
# smw.source.frequency.set_start(3686.4E6)
# smw.source.frequency.set_stop(3691.4E6)
# smw.source.frequency.step.set_mode(enums.FreqStepMode.DECimal)
# smw.source.frequency.step.set_increment(1E5)
print('The SMW200A output frequency is ', f_fix)
time.sleep(3)

# sweep frequency
#frequency_sweep = np.arange(3686.4E6, 3691.4E6, 1E4)
frequency_sweep = np.arange(3688.15E6, 3688.65E6, 1E4)
for f in frequency_sweep:
    smw.source.frequency.fixed.set_value(f)
    print('The SMW200A output frequency is', f)
    time.sleep(3)

print(f'Channel 1 PEP level: {smw.source.power.get_pep()} dBm')

# smw_rf2.output.state.set_value(False)
# smw_rf2.source.frequency.set_mode(enums.FreqMode.SWEep)
# smw_rf2.source.power.level.immediate.set_amplitude(-35)
# smw_rf2.source.frequency.set_start(800E6)
# smw_rf2.source.frequency.set_stop(900E6)
# smw_rf2.source.frequency.step.set_mode(enums.FreqStepMode.DECimal)
# smw_rf2.source.frequency.step.set_increment(10E6)
# print(f'Channel 2 PEP level: {smw_rf2.source.power.get_pep()} dBm')

# Direct SCPI interface:
response = smw.utilities.query_str('*IDN?')
print(f'Direct SCPI response on *IDN?: {response}')
smw.close()
